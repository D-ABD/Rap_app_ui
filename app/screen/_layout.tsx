/**
 * ScreenLayout
 *
 * üí° Layout g√©n√©ral utilis√© pour les pages "hors onglets", g√©n√©ralement des √©crans secondaires
 * comme les pages de gestion, param√®tres avanc√©s, formulaires ou d√©tails.
 *
 * Fonctionnalit√©s :
 * - V√©rifie que l‚Äôutilisateur est connect√© via `AuthContext`
 * - Redirige vers `/welcome` si non authentifi√©
 * - Affiche le `Header` personnalis√© au-dessus du contenu
 * - Utilise `<Slot />` pour injecter dynamiquement le contenu de la page
 *
 * üìå Ce layout est utilis√© pour toutes les routes plac√©es dans `app/(screens)/`
 * Exemple : `app/(screens)/admin.tsx`, `app/(screens)/ajouter-jury.tsx`, etc.
 *
 * Structure :
 * - app/
 *   - (screens)/
 *     - _layout.tsx ‚Üê ce fichier
 *     - admin.tsx
 *     - documents.tsx
 *     - ...
 *
 * üß† Bon √† savoir :
 * Ce layout n‚Äôaffiche pas la `TabBar`, contrairement √† `(tabs)/_layout.tsx`,
 * ce qui permet de cr√©er des √©crans pleine page sans navigation inf√©rieure.
 */

import { useEffect } from 'react';
import { useRouter, Slot } from 'expo-router';
import { useAuth } from '@/src/contexts/AuthContext';
import Header from '@/src/components/Header';
import { Box } from '@/src/theme';

export default function ScreenLayout() {
  const { isAuthenticated, isLoading } = useAuth();
  const router = useRouter();

  useEffect(() => {
    if (!isLoading && !isAuthenticated) {
      router.replace('/welcome');
    }
  }, [isAuthenticated, isLoading, router]);

  if (isLoading) return null;

  return (
    <Box flex={1} backgroundColor="mainBackground">
      <Header />
      <Slot />
    </Box>
  );
}
